#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };
    };

    macros {
        sleep_macro: sleep_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(D) &kp LA(F4) &kp UP_ARROW &kp ENTER>;
            label = "SLEEP_MACRO";
            wait-ms = <300>;
        };

        switch_language: switch_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LCTRL)>;
            label = "SWITCH_LANGUAGE";
        };

        switch_rus: switch_rus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&switch_language &to 1>;
            label = "SWITCH_RUS";
        };

        switch_eng: switch_eng {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&switch_language &to 0>;
            label = "SWITCH_ENG";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_switch_rus {
            bindings = <&switch_rus>;
            key-positions = <16 12 13 17>;
            layers = <0>;
        };

        combo_switch_eng {
            bindings = <&switch_eng>;
            key-positions = <12 13 16 17>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        english_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BSPC | RSE |

            bindings = <
                &kp Q           &kp W           &kp E        &kp R             &ht RA(T) T    &kp Y      &kp U             &ht RA(I) I      &kp O           &kp P
                &ht LEFT_WIN A  &ht LEFT_ALT S  &ht LCTRL D  &ht LEFT_SHIFT F  &kp G          &kp H      &ht LEFT_SHIFT J  &ht LCTRL K      &ht LEFT_ALT L  &ht LEFT_WIN SEMICOLON
&kp RA(PERIOD)  &kp Z           &kp X           &kp C        &kp V             &kp B          &kp N      &ht RA(M) M       &kp COMMA        &kp PERIOD      &kp SLASH               &kp RA(COMMA)
                                                &kp ESCAPE   &lt 2 TAB         &kp SPACE      &kp ENTER  &mo 4             &lt 8 BACKSPACE
            >;
        };

        russian_layer {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        eng_symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
                  &kp RA(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_6)    &kp RA(BACKSLASH)  &kp RA(LEFT_BRACKET)      &kp RA(RIGHT_BRACKET)      &kp RA(LS(SEMICOLON))  &kp RA(SINGLE_QUOTE)
                  &kp BACKSLASH     &kp LS(NUMBER_8)  &kp MINUS         &kp LS(EQUAL)     &kp EQUAL           &kp LS(NUMBER_7)   &kp LS(NUMBER_9)          &kp LS(NUMBER_0)           &kp RA(SEMICOLON)      &kp RA(LS(APOSTROPHE))
&kp LS(NUMBER_5)  &kp RA(NUMBER_2)  &kp RA(MINUS)     &kp LS(NUMBER_1)  &kp RA(SLASH)     &none               &kp LS(MINUS)      &kp RA(LS(LEFT_BRACKET))  &kp RA(LS(RIGHT_BRACKET))  &kp RA(LS(COMMA))      &kp RA(LS(PERIOD))      &kp LS(BACKSLASH)
                                                      &none             &mo 5             &none               &trans             &mo 5                     &kp DELETE
            >;
        };

        rus_symbol_layer {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
        &kp HOME  &kp LC(LEFT)      &kp UP_ARROW    &kp LC(RIGHT)      &kp PAGE_UP      &kp PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MULTIPLY
        &none     &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp PAGE_DOWN    &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_DIVIDE
&trans  &kp END   &kp LS(LC(LEFT))  &none           &kp LS(LC(RIGHT))  &kp INSERT       &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0     &trans
                                    &trans          &mo 5              &trans           &trans     &mo 5         &trans
            >;
        };

        function_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
       &kp F1  &kp F2   &kp F3   &kp F4   &kp C_BRIGHTNESS_INC    &kp C_VOLUME_UP    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &none
       &kp F5  &kp F6   &kp F7   &kp F8   &kp C_BRIGHTNESS_DEC    &kp C_VOLUME_DOWN  &kp LEFT_SHIFT  &kp LCTRL         &kp LEFT_ALT  &kp LEFT_WIN
&mo 7  &kp F9  &kp F10  &kp F11  &kp F12  &sleep_macro            &kp C_MUTE         &none           &none             &none         &none         &none
                        &none    &none    &none                   &none              &none           &none
            >;
        };

        settings_layer {
            bindings = <
       &none           &none         &none         &none        &none             &none  &none  &none  &none  &none
       &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bootloader  &studio_unlock    &none  &none  &none  &none  &none
&none  &none           &none         &none         &none        &none             &none  &none  &none  &none  &none  &none
                                     &none         &none        &none             &none  &none  &none
            >;
        };

        mouse_layer {
            bindings = <
       &none  &none           &mmv MOVE_UP    &none            &none    &none  &none           &msc SCRL_UP    &none            &none
       &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none    &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none
&none  &none  &mkp MCLK       &mkp RCLK       &mkp LCLK        &none    &none  &mkp LCLK       &mkp RCLK       &mkp MCLK        &none  &none
                              &none           &none            &none    &none  &none           &none
            >;
        };
    };
};

&mmv {
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <5>;
};
